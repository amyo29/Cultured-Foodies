// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Navigation /> renders a Navigation Bar 1`] = `
<div>
  <Navbar
    className="navbar-custom"
    collapseOnSelect={false}
    expand="lg"
    variant="light"
  >
    <NavbarBrand
      className="nav-link"
      href="/"
    >
      <b>
        Cultured Foodies
      </b>
    </NavbarBrand>
    <NavbarToggle
      aria-controls="basic-navbar-nav"
      label="Toggle navigation"
    />
    <NavbarCollapse
      id="basic-navbar-nav"
    >
      <Nav
        className="mr-auto"
        fill={false}
        justify={false}
      >
        <NavLink
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          className="a-custom"
          disabled={false}
          href="/about"
        >
          About Us
        </NavLink>
        <NavLink
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          className="a-custom"
          disabled={false}
          href="/cuisines"
        >
          Cuisines
        </NavLink>
        <NavLink
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          className="a-custom"
          disabled={false}
          href="/cities"
        >
          Cities
        </NavLink>
        <NavLink
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          className="a-custom"
          disabled={false}
          href="/restaurants"
        >
          Restaurants
        </NavLink>
      </Nav>
      <Form
        inline={true}
        onSubmit={[Function]}
      >
        <FormControl
          className="mr-sm-2"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="Search"
          type="text"
        />
        <Button
          active={false}
          disabled={false}
          onClick={[Function]}
          variant="outline-success"
        >
          Search
        </Button>
      </Form>
    </NavbarCollapse>
  </Navbar>
</div>
`;

exports[`Render views About Page 1`] = `
<div
  className="font-style center"
>
  <h1>
    About Us
  </h1>
  <p
    className="summary"
  >
    Hong Kong's dim sum? Italy's lasagna? Or UK's fish 'n' chips? Join us on a journey of culinary and cultural discovery that stretches through the ages and across the seas. With information on delectable cuisines from around the world and where you can experience them in your city, as well as highlights on worldwide countries and U.S cities, Cultured Foodies makes it easy for you to feast to your mind and stomach's content.
  </p>
  <h2>
    Meet the Team
  </h2>
  <Spinner
    animation="border"
    role="status"
  >
    <span
      className="sr-only"
    >
      Loading...
    </span>
  </Spinner>
  <div
    className="card"
    style={
      Object {
        "width": "18rem",
      }
    }
  >
    <h2>
      Stats
    </h2>
    <div>
      <h5>
        Total Commits:  
        <Spinner
          animation="border"
          aria-hidden="true"
          as="span"
          role="status"
          size="sm"
        />
      </h5>
    </div>
    <div>
      <h5>
        Total Issues:  
        <Spinner
          animation="border"
          aria-hidden="true"
          as="span"
          role="status"
          size="sm"
        />
      </h5>
    </div>
    <div>
      <h5>
        Total Tests:  
        <Spinner
          animation="border"
          aria-hidden="true"
          as="span"
          role="status"
          size="sm"
        />
      </h5>
    </div>
  </div>
  <div>
    <h2>
      APIs
    </h2>
  </div>
  <Container
    fluid={false}
  >
    <div
      className="row mb-4"
    >
      <InfoCard
        description="Used to retrieve country information"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://restcountries.eu/"
        title="REST Countries"
      />
      <InfoCard
        description="Used to find restaurant data."
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://rapidapi.com/blog/how-to-use-zomato-api/"
        title="Zomato API"
      />
      <InfoCard
        description="Used to retrieve cuisine and dishes data."
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://worldfood.guide/api/"
        title="WorldFood API"
      />
    </div>
    <div
      className="row mb-4"
    >
      <InfoCard
        description="Used to show the map location of a country"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://developers.google.com/maps/documentation/embed/get-started"
        title="Google Maps Embed API"
      />
      <InfoCard
        description="Used to retrieve images of restaurants."
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://developers.google.com/maps/documentation/places/web-service/photos"
        title="Google Places Photos API"
      />
      <InfoCard
        description="Used to retrieve city data."
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://developers.teleport.org/api/"
        title="Teleport API"
      />
    </div>
  </Container>
  <div>
    <h2>
      Tools
    </h2>
  </div>
  <Container
    fluid={false}
  >
    <div
      className="row mb-4"
    >
      <InfoCard
        description="Cloud hosting platform"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://aws.amazon.com/"
        title="AWS"
      />
      <InfoCard
        description="GitLab Repository and CI/CD platform"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://gitlab.com/"
        title="GitLab"
      />
      <InfoCard
        description="API and streamline collaboration platform"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://www.postman.com/"
        title="Postman"
      />
    </div>
    <div
      className="row mb-4"
    >
      <InfoCard
        description="A JavaScript library for building user interfaces"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://reactjs.org/"
        title="React"
      />
      <InfoCard
        description="A free and open-source CSS framework directed at responsive, mobile-first front-end web development"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://getbootstrap.com/"
        title="BootStrap"
      />
      <InfoCard
        description="Domain name registrar"
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://www.namecheap.com/"
        title="NameCheap"
      />
    </div>
    <div
      className="row mb-4"
    >
      <InfoCard
        description="Open-source relational database management system."
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://postgresql.org"
        title="PostgreSQL"
      />
    </div>
  </Container>
  <div>
    <h2>
      Our Data
    </h2>
  </div>
  <Container
    fluid={false}
  >
    <div
      className="row justify-content-center"
    >
      <InfoCard
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://gitlab.com/cs373-group-11/cultured-foodies"
        title="Gitlab Repo"
      />
      <InfoCard
        img={
          Object {
            "roots": Array [
              "<rootDir>/src",
            ],
            "setupFilesAfterEnv": Array [
              "<rootDir>/src/setupEnzyme.ts",
            ],
            "snapshotSerializers": Array [
              "enzyme-to-json/serializer",
            ],
            "testMatch": Array [
              "**/__tests__/**/*.+(ts|tsx|js)",
              "**/?(*.)+(spec|test).+(ts|tsx|js)",
            ],
            "transform": Object {
              "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
              "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
              "^.+\\\\.(ts|tsx)$": "ts-jest",
            },
          }
        }
        link="https://documenter.getpostman.com/view/15165948/TzJrBeeW"
        title="Postman API"
      />
    </div>
  </Container>
</div>
`;

exports[`Render views Cities model page 1`] = `
<div
  style={
    Object {
      "left": "50%",
      "position": "absolute",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
    }
  }
>
  <img
    alt="loading..."
    src="spinny.gif"
  />
</div>
`;

exports[`Render views City instance page 1`] = `
<div>
  <img
    className="city-img-top"
  />
  <h1
    className="text-center"
  />
  <div
    className="card-columns"
    style={
      Object {
        "margin": 20,
      }
    }
  >
    <div
      className="card"
    >
      <div
        className="card-body align-self-start"
      >
        <h3
          className="margin"
        />
        <h5>
          Summary
        </h5>
        <p />
        <h5>
          State
        </h5>
        <p />
        <h5>
          Population
        </h5>
        <p />
        <h5>
          Location
        </h5>
        <h6>
          Latitude
        </h6>
        <p>
          <h6>
            Longitude
          </h6>
        </p>
        <h5>
          Timezone
        </h5>
        <p />
      </div>
    </div>
    <div
      className="card"
    >
      <h3
        className="margin"
      >
        's Urban Area- Quality of Life Scores
      </h3>
      <div
        className="my-custom-scrollbar"
        style={
          Object {
            "maxHeight": "40rem",
            "width": "40rem",
          }
        }
      >
        <table
          className="table table-bordered table-hover mb-0"
        >
          <thead>
            <tr>
              <th
                scope="col"
              >
                Attribute
              </th>
              <th
                scope="col"
              >
                Score
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td
                scope="row"
              >
                Business Freedom
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Cost of Living
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Economy
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Housing
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Commute
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Education
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Environmental Quality
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Healthcare
              </td>
              <td>
                No Data
                 
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Leisure and Culture
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Outdoors
              </td>
              <td>
                No Data
                 
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Safety
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Startups
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Taxation
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Tolerance
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Travel and Connectivity
              </td>
              <td>
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Internet Access
              </td>
              <td>
                 
                No Data
              </td>
            </tr>
            <tr>
              <td
                scope="row"
              >
                Venture Capital
              </td>
              <td>
                 
                No Data
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <div
      className="card"
    >
      <h3
        className="margin"
      >
        Restaurants in 
      </h3>
      <div
        className="my-custom-scrollbar-restaurant"
        style={
          Object {
            "maxHeight": "34rem",
            "width": "40rem",
          }
        }
      >
        <table
          className="table table-bordered table-hover mb-0"
        >
          <tbody>
            <p>
              loading
            </p>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    style={
      Object {
        "margin": 10,
      }
    }
  >
    <Container
      fluid={false}
      style={
        Object {
          "maxWidth": "90%",
        }
      }
    >
      <h3
        className="mt-2"
      >
        Cuisines of 
      </h3>
      <Carousel
        activeIndex={0}
        controls={true}
        defaultActiveIndex={0}
        fade={false}
        indicators={true}
        interval={5000}
        keyboard={true}
        nextIcon={
          <span
            aria-hidden="true"
            className="carousel-control-next-icon"
          />
        }
        nextLabel="Next"
        onSelect={[Function]}
        pause="hover"
        prevIcon={
          <span
            aria-hidden="true"
            className="carousel-control-prev-icon"
          />
        }
        prevLabel="Previous"
        slide={true}
        style={
          Object {
            "margin": "25px",
          }
        }
        touch={true}
        wrap={true}
      />
    </Container>
  </div>
  <div
    className="center"
  >
    <h2>
      Map Location
    </h2>
    <div
      className="map-responsive"
    >
      <iframe
        height="450"
        loading="lazy"
        src="https://www.google.com/maps/embed/v1/place?key=AIzaSyBnpJl9h_gz0umc1sVng27AS3rNZOg7LR8&q=undefined"
        width="600"
      />
    </div>
  </div>
</div>
`;

exports[`Render views Cuisine instance page 1`] = `
<div
  style={
    Object {
      "left": "50%",
      "position": "absolute",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
    }
  }
>
  <Spinner
    animation="border"
  />
</div>
`;

exports[`Render views Cuisines model page 1`] = `
<div
  style={
    Object {
      "left": "50%",
      "position": "absolute",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
    }
  }
>
  <img
    alt="loading..."
    src="spinny donut.gif"
  />
</div>
`;

exports[`Render views Restaurant instance page 1`] = `
<div>
  <body
    className="Instance center-div"
  >
    <h2
      className="Instance-header"
    />
    <div
      align-items="center"
      className="info"
    >
      <div
        className="row"
      >
        <div
          className="col"
        >
          <div
            className="card"
          >
            <img
              alt=""
              className="restaurant-card-img-top"
            />
            <div
              className="card-body"
            >
              <h5
                className="card-title"
              />
              <p
                className="card-text"
              >
                Phone Number: 
              </p>
              <p
                className="card-text"
              >
                Address: 
              </p>
              <p
                className="card-text"
              >
                City: 
              </p>
              <p
                className="card-text"
              >
                Zipcode: 
              </p>
              <p
                className="card-text"
              >
                Average Rating: 
              </p>
              <p
                className="card-text"
              >
                Highlights: 
              </p>
              <p
                className="card-text"
              >
                Price Range: 
              </p>
              <p
                className="card-text"
              >
                Average Cost for Two: 
                $undefined
              </p>
              <p
                className="card-text"
              >
                Timings: 
              </p>
              <p
                className="card-text"
              >
                Menu:
                <a>
                   
                  <br />
                </a>
              </p>
              <p
                className="card-text"
              >
                Cities which have this restaurant:
                <a
                  href="/cities/undefined"
                >
                   
                  <br />
                </a>
              </p>
              Cuisines for this restaurant: 
              <br />
              <p>
                loading
              </p>
              <p
                className="card-text"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>
  <div
    className="center"
  >
    <h4>
      Map Location
    </h4>
    <div
      className="map-responsive"
    >
      <iframe
        height="450"
        loading="lazy"
        src="https://www.google.com/maps/embed/v1/place?key=AIzaSyBnpJl9h_gz0umc1sVng27AS3rNZOg7LR8&q=undefinedundefined"
        width="600"
      />
    </div>
  </div>
</div>
`;

exports[`Render views Restaurants model page 1`] = `
<div
  style={
    Object {
      "left": "50%",
      "position": "absolute",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
    }
  }
>
  <img
    alt="loading..."
    src="dumpling.gif"
  />
</div>
`;

exports[`Render views Splash Page 1`] = `
<div>
  <body
    className="Home"
    data-background={
      Object {
        "roots": Array [
          "<rootDir>/src",
        ],
        "setupFilesAfterEnv": Array [
          "<rootDir>/src/setupEnzyme.ts",
        ],
        "snapshotSerializers": Array [
          "enzyme-to-json/serializer",
        ],
        "testMatch": Array [
          "**/__tests__/**/*.+(ts|tsx|js)",
          "**/?(*.)+(spec|test).+(ts|tsx|js)",
        ],
        "transform": Object {
          "\\\\.(jpg|jpeg|png|gif|eot|otf)$": "<rootDir>/assetsTransformer.js",
          "\\\\.(wav|mp3|m4a|aac|oga)$": "<rootDir>/assetsTransformer.js",
          "\\\\.(webp|svg|ttf|woff|woff2|mp4|webm)$": "<rootDir>/assetsTransformer.js",
          "^.+\\\\.(ts|tsx)$": "ts-jest",
        },
      }
    }
    id="mybody"
  >
    <header
      className="Home-header"
    >
      <div
        className="Title-summary"
      >
        Welcome!
        <div
          className="summary"
        >
          Hong Kong's dim sum? Italy's lasagna? Or UK's fish 'n' chips? 
          <br />
          Join us on a journey of culinary and cultural discovery that stretches through the ages and across the seas.
          <br />
          With information on delectable cuisines from around the world and where you can experience them in your city,
          <br />
          as well as highlights on worldwide countries and U.S cities, 
          <br />
          Cultured Foodies makes it easy for you to feast to your mind and stomach's content.
          <br />
        </div>
      </div>
    </header>
  </body>
</div>
`;
