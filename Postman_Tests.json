{
	"info": {
		"_postman_id": "2ceb284e-7fe6-42c9-8ff9-1f4add70cddf",
		"name": "Testing API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "countries",
			"item": [
				{
					"name": "Returns list of countries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Countries Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"jsonData = jsonData.countries[0]\r",
									"pm.test(\"Countries Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.alpha2code)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.alpha3code)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.area)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.borders)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.capital)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.currencies)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.demonym)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.flag)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.gini)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.languages)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.latitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.longitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.native_name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.numeric_code)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.population)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.region)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.subregion)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.timezones)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.translations)).to.eql(\"object\");\r",
									"});\r",
									"jsonData  = pm.response.json()\r",
									"pm.test('Number of countries returned = ' + jsonData.countries.length, function () {\r",
									"    pm.expect(jsonData.countries.length).to.equal(250);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/countries",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"countries"
							],
							"query": [
								{
									"key": "id",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "List of all countries and corresponding details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 67807827,\n \"name\": \"ut minim cillum\",\n \"code\": \"Ut id est anim esse\",\n \"language\": \"cupidatat \",\n \"population\": -29146144,\n \"timezone\": \"laborum dolor ullamco\",\n \"currency\": \"laboris\",\n \"region\": \"non\",\n \"flagUrl\": \"commodo sed velit\",\n \"latlong\": [\n  64.04218771677856,\n  133.7230202132938\n ]\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						}
					]
				},
				{
					"name": "Details about a country",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Countries Id Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"pm.test(\"Countries Id Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.alpha2code)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.alpha3code)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.area)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.borders)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.capital)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.currencies)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.demonym)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.flag)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.gini)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.languages)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.latitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.longitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.native_name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.numeric_code)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.population)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.region)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.subregion)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.timezones)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.translations)).to.eql(\"object\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/countries/id=1",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"countries",
								"id=1"
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/:countryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										":countryId"
									],
									"variable": [
										{
											"key": "countryId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						},
						{
							"name": "Details about a country",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/:countryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										":countryId"
									],
									"variable": [
										{
											"key": "countryId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 67807827,\n \"name\": \"ut minim cillum\",\n \"code\": \"Ut id est anim esse\",\n \"language\": \"cupidatat \",\n \"population\": -29146144,\n \"timezone\": \"laborum dolor ullamco\",\n \"currency\": \"laboris\",\n \"region\": \"non\",\n \"flagUrl\": \"commodo sed velit\",\n \"latlong\": [\n  64.04218771677856,\n  133.7230202132938\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "cities",
			"item": [
				{
					"name": "Returns list of cities in the USA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cities Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"jsonData = jsonData.cities[0]\r",
									"pm.test(\"Cities Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.business_freedom)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.commute)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.cost_of_living)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.cuisine_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.cuisines)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.economy)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.education)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.environmental_quality)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.full_name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.healthcare)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.housing)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.imagesmobile)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.imagesweb)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.internet_access)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.latitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.longitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.outdoors)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.population)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.restaurant_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.restaurants)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.safety)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.state)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.summary)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.taxation)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.timezone)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.travel_connectivity)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.venture_capital)).to.eql(\"number\");\r",
									"});\r",
									"jsonData  = pm.response.json()\r",
									"pm.test('Number of cities returned = ' + jsonData.cities.length, function () {\r",
									"    pm.expect(jsonData.cities.length).to.equal(189);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/cities",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"cities"
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cities"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						},
						{
							"name": "List of all cities and corresponding details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -88785651,\n \"business_freedom\": 1923028.5569237918,\n \"commute\": -97568903.74116617,\n \"cost_of_living\": 29063124.33224097,\n \"cuisine_ids\": \"quis Lorem\",\n \"cuisines\": \"cupidatat velit ut sit\",\n \"economy\": 94700.79958541691,\n \"education\": 17959376.069525808,\n \"environmental_quality\": 58245400.37928507,\n \"full_name\": \"adipisicing labore\",\n \"healthcare\": -72002550.57257277,\n \"housing\": 75971717.07571623,\n \"imagesmobile\": \"ad minim\",\n \"imagesweb\": \"ea minim enim\",\n \"internet_access\": 74393496.20836517,\n \"latitude\": 48933710.61418262,\n \"leisure_culture\": -27250453.248851642,\n \"longitude\": -64276748.77925193,\n \"name\": \"velit in mollit\",\n \"outdoors\": -92609717.68897867,\n \"population\": -22003786,\n \"restaurant_ids\": \"commodo aliqua\",\n \"restaurants\": \"qui amet\",\n \"safety\": -16719879.624597937,\n \"state\": \"nisi\",\n \"summary\": \"ut occaecat\",\n \"taxation\": 82107633.2872208,\n \"timezone\": \"ex pariatur nostrud\",\n \"travel_connectivity\": 55370289.95962903,\n \"venture_capital\": -15092184.339051113\n}"
						}
					]
				},
				{
					"name": "Details about a city",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cities Id Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"pm.test(\"Cities Id Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.business_freedom)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.commute)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.cost_of_living)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.cuisine_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.cuisines)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.economy)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.education)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.environmental_quality)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.full_name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.healthcare)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.housing)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.imagesmobile)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.imagesweb)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.internet_access)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.latitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.longitude)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.outdoors)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.population)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.restaurant_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.restaurants)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.safety)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.state)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.summary)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.taxation)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.timezone)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.travel_connectivity)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.venture_capital)).to.eql(\"number\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/cities/id=1",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"cities",
								"id=1"
							]
						}
					},
					"response": [
						{
							"name": "Details about a city",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cities/:cityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cities",
										":cityId"
									],
									"variable": [
										{
											"key": "cityId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -88785651,\n \"business_freedom\": 1923028.5569237918,\n \"commute\": -97568903.74116617,\n \"cost_of_living\": 29063124.33224097,\n \"cuisine_ids\": \"quis Lorem\",\n \"cuisines\": \"cupidatat velit ut sit\",\n \"economy\": 94700.79958541691,\n \"education\": 17959376.069525808,\n \"environmental_quality\": 58245400.37928507,\n \"full_name\": \"adipisicing labore\",\n \"healthcare\": -72002550.57257277,\n \"housing\": 75971717.07571623,\n \"imagesmobile\": \"ad minim\",\n \"imagesweb\": \"ea minim enim\",\n \"internet_access\": 74393496.20836517,\n \"latitude\": 48933710.61418262,\n \"leisure_culture\": -27250453.248851642,\n \"longitude\": -64276748.77925193,\n \"name\": \"velit in mollit\",\n \"outdoors\": -92609717.68897867,\n \"population\": -22003786,\n \"restaurant_ids\": \"commodo aliqua\",\n \"restaurants\": \"qui amet\",\n \"safety\": -16719879.624597937,\n \"state\": \"nisi\",\n \"summary\": \"ut occaecat\",\n \"taxation\": 82107633.2872208,\n \"timezone\": \"ex pariatur nostrud\",\n \"travel_connectivity\": 55370289.95962903,\n \"venture_capital\": -15092184.339051113\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cities/:cityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cities",
										":cityId"
									],
									"variable": [
										{
											"key": "cityId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "restaurants",
			"item": [
				{
					"name": "Returns list of restaurants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Restaurants Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"jsonData = jsonData.restaurants[0]\r",
									"pm.test(\"Restaurants Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.address)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.aggregate_rating)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.average_cost_for_two)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.city)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.city_id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.cuisine_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.cuisines)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.highlights)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.latitude)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.longitude)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.menu_url)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.phone_numbers)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.price_range)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.restaurant_image)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.state_abbrev)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.timings)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.url)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.zipcode)).to.eql(\"string\");\r",
									"});\r",
									"jsonData  = pm.response.json()\r",
									"pm.test('Number of restaurants returned = ' + jsonData.restaurants.length, function () {\r",
									"    pm.expect(jsonData.restaurants.length).to.equal(5369);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/restaurants",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"restaurants"
							]
						}
					},
					"response": [
						{
							"name": "List of restaurants and their corresponding details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -34447429,\n \"address\": \"dol\",\n \"aggregate_rating\": \"dolor nulla dolore\",\n \"average_cost_for_two\": -49707973.59117873,\n \"city\": \"magna commodo culpa eu\",\n \"city_id\": -10743616,\n \"cuisine_ids\": \"eu irure\",\n \"cuisines\": \"conse\",\n \"highlights\": \"ad dolor ve\",\n \"latitude\": \"consequat temp\",\n \"longitude\": \"nulla id\",\n \"menu_url\": \"tempor exercitation\",\n \"name\": \"proident veniam qui eu\",\n \"phone_numbers\": \"id non\",\n \"price_range\": 39834695,\n \"restaurant_image\": \"cillum voluptate\",\n \"state_abbrev\": \"aute irure qui\",\n \"timings\": \"ipsum velit\",\n \"url\": \"adipisicing officia tempor\",\n \"zipcode\": \"magna ipsum\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						}
					]
				},
				{
					"name": "Details about a restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Restaurants Id Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"pm.test(\"Restaurants Id Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.address)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.aggregate_rating)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.average_cost_for_two)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.city)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.city_id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.cuisine_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.cuisines)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.highlights)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.latitude)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.longitude)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.menu_url)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.phone_numbers)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.price_range)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.restaurant_image)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.state_abbrev)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.timings)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.url)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.zipcode)).to.eql(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/restaurants/id=1",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"restaurants",
								"id=1"
							]
						}
					},
					"response": [
						{
							"name": "Details about a restaurant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:restaurantid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":restaurantid"
									],
									"variable": [
										{
											"key": "restaurantid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -34447429,\n \"address\": \"dol\",\n \"aggregate_rating\": \"dolor nulla dolore\",\n \"average_cost_for_two\": -49707973.59117873,\n \"city\": \"magna commodo culpa eu\",\n \"city_id\": -10743616,\n \"cuisine_ids\": \"eu irure\",\n \"cuisines\": \"conse\",\n \"highlights\": \"ad dolor ve\",\n \"latitude\": \"consequat temp\",\n \"longitude\": \"nulla id\",\n \"menu_url\": \"tempor exercitation\",\n \"name\": \"proident veniam qui eu\",\n \"phone_numbers\": \"id non\",\n \"price_range\": 39834695,\n \"restaurant_image\": \"cillum voluptate\",\n \"state_abbrev\": \"aute irure qui\",\n \"timings\": \"ipsum velit\",\n \"url\": \"adipisicing officia tempor\",\n \"zipcode\": \"magna ipsum\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:restaurantid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":restaurantid"
									],
									"variable": [
										{
											"key": "restaurantid"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "cuisines",
			"item": [
				{
					"name": "Returns list of cultural cuisines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cuisines Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"jsonData = jsonData.cuisines[0]\r",
									"pm.test(\"Cuisines Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.cities)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.city_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.country)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.countryID)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.description)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.dishes)).to.eql(\"object\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.restaurant_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.restaurants)).to.eql(\"string\");\r",
									"});\r",
									"jsonData  = pm.response.json()\r",
									"pm.test('Number of cuisines returned = ' + jsonData.cuisines.length, function () {\r",
									"    pm.expect(jsonData.cuisines.length).to.equal(101);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/cuisines",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"cuisines"
							]
						}
					},
					"response": [
						{
							"name": "List of cuisines and their corresponding details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cuisines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cuisines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 58969173,\n \"city_ids\": \"sed irure cillum sunt\",\n \"country\": \"voluptate proident laborum\",\n \"countryID\": \"eiusmod aliquip irure laborum\",\n \"description\": \"ea deserunt nulla\",\n \"dishes\": [\n  {\n   \"image_url\": \"nulla in consectetur\",\n   \"name\": \"sed ad\"\n  },\n  {\n   \"image_url\": \"incididunt ullamco elit\",\n   \"name\": \"ullamco elit deserunt\"\n  }\n ],\n \"name\": \"mollit commodo nulla enim ex\",\n \"restaurant_ids\": \"deserunt magna enim cillum qui\",\n \"restaurants\": \"culpa magna\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cuisines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cuisines"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						}
					]
				},
				{
					"name": "Details about a cultural cuisine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cuisines Id Status Test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"let jsonData  = pm.response.json()\r",
									"pm.test(\"Cuisines Id Response Test\", function () {\r",
									"    pm.expect(typeof(jsonData.cities)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.city_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.country)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.countryID)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.description)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.dishes)).to.eql(\"object\");\r",
									"    pm.expect(typeof(jsonData.id)).to.eql(\"number\");\r",
									"    pm.expect(typeof(jsonData.name)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.restaurant_ids)).to.eql(\"string\");\r",
									"    pm.expect(typeof(jsonData.restaurants)).to.eql(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.culturedfoodies.me/api/cuisines/id=1",
							"protocol": "https",
							"host": [
								"www",
								"culturedfoodies",
								"me"
							],
							"path": [
								"api",
								"cuisines",
								"id=1"
							]
						}
					},
					"response": [
						{
							"name": "Details about a cultural cuisine",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cuisines/:cuisineid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cuisines",
										":cuisineid"
									],
									"variable": [
										{
											"key": "cuisineid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -52011794,\n \"city_ids\": \"aute elit\",\n \"country\": \"ut dolore\",\n \"countryID\": \"se\",\n \"description\": \"id tempor proident\",\n \"dishes\": [\n  {\n   \"image_url\": \"do ut aliquip\",\n   \"name\": \"occaecat eu\"\n  },\n  {\n   \"image_url\": \"do cillum Lorem\",\n   \"name\": \"sun\"\n  }\n ],\n \"name\": \"ut ex Duis\",\n \"restaurant_ids\": \"incididunt est Excepteur dolore\",\n \"restaurants\": \"laborum\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cuisines/:cuisineid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cuisines",
										":cuisineid"
									],
									"variable": [
										{
											"key": "cuisineid"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -32681924,\n \"message\": \"aliquip ut labore adipisicing\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://culturedfoodies.me/api",
			"type": "string"
		}
	]
}